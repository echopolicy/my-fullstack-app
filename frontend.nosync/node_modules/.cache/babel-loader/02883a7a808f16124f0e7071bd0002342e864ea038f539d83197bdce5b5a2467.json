{"ast":null,"code":"var _jsxFileName = \"/Users/hamansharma/Desktop/Code/echoPolicy/my-fullstack-app/frontend/src/pages/PollFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollFeed = () => {\n  _s();\n  const [polls, setPolls] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:5001/api/polls') // adjust if needed\n    .then(res => res.json()).then(data => {\n      console.log('Fetched polls:', data);\n      setPolls(data);\n    }).catch(err => console.error('Error fetching polls:', err));\n  }, []);\n  const handleOptionSelect = (pollId, optionIndex) => {\n    setSelectedOptions(prev => ({\n      ...prev,\n      [pollId]: optionIndex\n    }));\n  };\n  const handleVote = async pollId => {\n    const optionIndex = selectedOptions[pollId];\n    if (optionIndex === undefined) {\n      alert('Please select an option before voting.');\n      return;\n    }\n    try {\n      const res = await fetch(`http://localhost:5001/api/polls/${pollId}/vote`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          optionIndex\n        })\n      });\n      if (res.ok) {\n        const updatedPoll = await res.json();\n        setPolls(prev => prev.map(p => p.id === pollId ? updatedPoll : p));\n      } else {\n        console.error('Vote failed');\n      }\n    } catch (error) {\n      console.error('Error voting:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Active Polls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No active polls available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : polls.map(poll => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: poll.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), poll.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `poll-${poll.id}`,\n            value: index,\n            checked: selectedOptions[poll.id] === index,\n            onChange: () => handleOptionSelect(poll.id, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), option.text, \" \\u2014 \", option.votes, \" votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVote(poll.id),\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Vote Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, poll.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PollFeed, \"mRjeeMNZ9fURb4lUQYfMOGhWfV8=\");\n_c = PollFeed;\nexport default PollFeed;\nvar _c;\n$RefreshReg$(_c, \"PollFeed\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PollFeed","_s","polls","setPolls","selectedOptions","setSelectedOptions","fetch","then","res","json","data","console","log","catch","err","error","handleOptionSelect","pollId","optionIndex","prev","handleVote","undefined","alert","method","headers","body","JSON","stringify","ok","updatedPoll","map","p","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","poll","style","border","padding","marginBottom","question","options","option","index","type","name","value","checked","onChange","text","votes","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/hamansharma/Desktop/Code/echoPolicy/my-fullstack-app/frontend/src/pages/PollFeed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst PollFeed = () => {\n  const [polls, setPolls] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:5001/api/polls')  // adjust if needed\n      .then(res => res.json())\n      .then(data => {\n        console.log('Fetched polls:', data);\n        setPolls(data);\n      })\n      .catch(err => console.error('Error fetching polls:', err));\n  }, []);\n\n  const handleOptionSelect = (pollId, optionIndex) => {\n    setSelectedOptions(prev => ({ ...prev, [pollId]: optionIndex }));\n  };\n\n  const handleVote = async (pollId) => {\n    const optionIndex = selectedOptions[pollId];\n    if (optionIndex === undefined) {\n      alert('Please select an option before voting.');\n      return;\n    }\n\n    try {\n      const res = await fetch(`http://localhost:5001/api/polls/${pollId}/vote`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ optionIndex })\n      });\n\n      if (res.ok) {\n        const updatedPoll = await res.json();\n        setPolls(prev =>\n          prev.map(p => (p.id === pollId ? updatedPoll : p))\n        );\n      } else {\n        console.error('Vote failed');\n      }\n    } catch (error) {\n      console.error('Error voting:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Active Polls</h2>\n      {polls.length === 0 ? (\n        <p>No active polls available.</p>\n      ) : (\n        polls.map(poll => (\n          <div key={poll.id} style={{ border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\n            <h3>{poll.question}</h3>\n            {poll.options.map((option, index) => (\n              <div key={index}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name={`poll-${poll.id}`}\n                    value={index}\n                    checked={selectedOptions[poll.id] === index}\n                    onChange={() => handleOptionSelect(poll.id, index)}\n                  />\n                  {option.text} â€” {option.votes} votes\n                </label>\n              </div>\n            ))}\n            <button onClick={() => handleVote(poll.id)} style={{ marginTop: '10px' }}>\n              Vote Now\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PollFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}